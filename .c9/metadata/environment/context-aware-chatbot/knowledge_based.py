{"filter":false,"title":"knowledge_based.py","tooltip":"/context-aware-chatbot/knowledge_based.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":136,"column":21},"end":{"row":136,"column":22},"action":"insert","lines":[" "],"id":1528}],[{"start":{"row":136,"column":22},"end":{"row":136,"column":58},"action":"insert","lines":["model_response[\"outputs\"][0][\"text\"]"],"id":1529}],[{"start":{"row":139,"column":4},"end":{"row":139,"column":8},"action":"remove","lines":["    "],"id":1530},{"start":{"row":139,"column":0},"end":{"row":139,"column":4},"action":"remove","lines":["    "]},{"start":{"row":138,"column":8},"end":{"row":139,"column":0},"action":"remove","lines":["",""]},{"start":{"row":138,"column":4},"end":{"row":138,"column":8},"action":"remove","lines":["    "]},{"start":{"row":138,"column":0},"end":{"row":138,"column":4},"action":"remove","lines":["    "]},{"start":{"row":137,"column":0},"end":{"row":138,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":41,"column":4},"end":{"row":41,"column":6},"action":"insert","lines":["# "],"id":1531},{"start":{"row":42,"column":4},"end":{"row":42,"column":6},"action":"insert","lines":["# "]},{"start":{"row":43,"column":4},"end":{"row":43,"column":6},"action":"insert","lines":["# "]}],[{"start":{"row":44,"column":19},"end":{"row":44,"column":20},"action":"insert","lines":["m"],"id":1532},{"start":{"row":44,"column":20},"end":{"row":44,"column":21},"action":"insert","lines":["o"]},{"start":{"row":44,"column":21},"end":{"row":44,"column":22},"action":"insert","lines":["d"]},{"start":{"row":44,"column":22},"end":{"row":44,"column":23},"action":"insert","lines":["e"]},{"start":{"row":44,"column":23},"end":{"row":44,"column":24},"action":"insert","lines":["l"]}],[{"start":{"row":44,"column":24},"end":{"row":44,"column":25},"action":"insert","lines":[" "],"id":1533},{"start":{"row":44,"column":25},"end":{"row":44,"column":26},"action":"insert","lines":["n"]},{"start":{"row":44,"column":26},"end":{"row":44,"column":27},"action":"insert","lines":["o"]},{"start":{"row":44,"column":27},"end":{"row":44,"column":28},"action":"insert","lines":["t"]}],[{"start":{"row":44,"column":28},"end":{"row":44,"column":29},"action":"insert","lines":[" "],"id":1534},{"start":{"row":44,"column":29},"end":{"row":44,"column":30},"action":"insert","lines":["w"]},{"start":{"row":44,"column":30},"end":{"row":44,"column":31},"action":"insert","lines":["o"]},{"start":{"row":44,"column":31},"end":{"row":44,"column":32},"action":"insert","lines":["r"]},{"start":{"row":44,"column":32},"end":{"row":44,"column":33},"action":"insert","lines":["k"]},{"start":{"row":44,"column":33},"end":{"row":44,"column":34},"action":"insert","lines":["i"]},{"start":{"row":44,"column":34},"end":{"row":44,"column":35},"action":"insert","lines":["n"]},{"start":{"row":44,"column":35},"end":{"row":44,"column":36},"action":"insert","lines":["g"]}],[{"start":{"row":44,"column":36},"end":{"row":44,"column":37},"action":"insert","lines":[" "],"id":1535},{"start":{"row":44,"column":37},"end":{"row":44,"column":38},"action":"insert","lines":["l"]},{"start":{"row":44,"column":38},"end":{"row":44,"column":39},"action":"insert","lines":["o"]},{"start":{"row":44,"column":39},"end":{"row":44,"column":40},"action":"insert","lines":["l"]}],[{"start":{"row":136,"column":58},"end":{"row":137,"column":0},"action":"insert","lines":["",""],"id":1536},{"start":{"row":137,"column":0},"end":{"row":137,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":113,"column":29},"end":{"row":113,"column":32},"action":"remove","lines":["512"],"id":1537},{"start":{"row":113,"column":29},"end":{"row":113,"column":30},"action":"insert","lines":["2"]},{"start":{"row":113,"column":30},"end":{"row":113,"column":31},"action":"insert","lines":["0"]},{"start":{"row":113,"column":31},"end":{"row":113,"column":32},"action":"insert","lines":["0"]}],[{"start":{"row":114,"column":33},"end":{"row":114,"column":34},"action":"remove","lines":["5"],"id":1538}],[{"start":{"row":114,"column":33},"end":{"row":114,"column":34},"action":"insert","lines":["2"],"id":1539}],[{"start":{"row":119,"column":63},"end":{"row":120,"column":0},"action":"insert","lines":["",""],"id":1540},{"start":{"row":120,"column":0},"end":{"row":120,"column":8},"action":"insert","lines":["        "]},{"start":{"row":120,"column":8},"end":{"row":121,"column":0},"action":"insert","lines":["",""]},{"start":{"row":121,"column":0},"end":{"row":121,"column":8},"action":"insert","lines":["        "]},{"start":{"row":121,"column":8},"end":{"row":121,"column":9},"action":"insert","lines":["p"]},{"start":{"row":121,"column":9},"end":{"row":121,"column":10},"action":"insert","lines":["r"]},{"start":{"row":121,"column":10},"end":{"row":121,"column":11},"action":"insert","lines":["i"]},{"start":{"row":121,"column":11},"end":{"row":121,"column":12},"action":"insert","lines":["n"]},{"start":{"row":121,"column":12},"end":{"row":121,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":121,"column":13},"end":{"row":121,"column":15},"action":"insert","lines":["()"],"id":1541}],[{"start":{"row":121,"column":14},"end":{"row":121,"column":15},"action":"insert","lines":["o"],"id":1542},{"start":{"row":121,"column":15},"end":{"row":121,"column":16},"action":"insert","lines":["u"]},{"start":{"row":121,"column":16},"end":{"row":121,"column":17},"action":"insert","lines":["t"]},{"start":{"row":121,"column":17},"end":{"row":121,"column":18},"action":"insert","lines":["p"]},{"start":{"row":121,"column":18},"end":{"row":121,"column":19},"action":"insert","lines":["u"]},{"start":{"row":121,"column":19},"end":{"row":121,"column":20},"action":"insert","lines":["t"]}],[{"start":{"row":121,"column":14},"end":{"row":121,"column":20},"action":"remove","lines":["output"],"id":1543},{"start":{"row":121,"column":14},"end":{"row":121,"column":25},"action":"insert","lines":["output_text"]}],[{"start":{"row":120,"column":8},"end":{"row":121,"column":0},"action":"insert","lines":["",""],"id":1544},{"start":{"row":121,"column":0},"end":{"row":121,"column":8},"action":"insert","lines":["        "]},{"start":{"row":121,"column":8},"end":{"row":121,"column":9},"action":"insert","lines":["p"]},{"start":{"row":121,"column":9},"end":{"row":121,"column":10},"action":"insert","lines":["r"]},{"start":{"row":121,"column":10},"end":{"row":121,"column":11},"action":"insert","lines":["i"]},{"start":{"row":121,"column":11},"end":{"row":121,"column":12},"action":"insert","lines":["n"]},{"start":{"row":121,"column":12},"end":{"row":121,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":121,"column":13},"end":{"row":121,"column":15},"action":"insert","lines":["()"],"id":1545}],[{"start":{"row":121,"column":14},"end":{"row":121,"column":16},"action":"insert","lines":["\"\""],"id":1546}],[{"start":{"row":121,"column":15},"end":{"row":121,"column":16},"action":"insert","lines":["A"],"id":1547},{"start":{"row":121,"column":16},"end":{"row":121,"column":17},"action":"insert","lines":["!"]},{"start":{"row":121,"column":17},"end":{"row":121,"column":18},"action":"insert","lines":["2"]},{"start":{"row":121,"column":18},"end":{"row":121,"column":19},"action":"insert","lines":["1"]}],[{"start":{"row":121,"column":18},"end":{"row":121,"column":19},"action":"remove","lines":["1"],"id":1548},{"start":{"row":121,"column":17},"end":{"row":121,"column":18},"action":"remove","lines":["2"]},{"start":{"row":121,"column":16},"end":{"row":121,"column":17},"action":"remove","lines":["!"]}],[{"start":{"row":121,"column":16},"end":{"row":121,"column":17},"action":"insert","lines":["I"],"id":1549}],[{"start":{"row":121,"column":17},"end":{"row":121,"column":18},"action":"insert","lines":[" "],"id":1550}],[{"start":{"row":121,"column":17},"end":{"row":121,"column":18},"action":"remove","lines":[" "],"id":1551}],[{"start":{"row":121,"column":17},"end":{"row":121,"column":18},"action":"insert","lines":["2"],"id":1552},{"start":{"row":121,"column":18},"end":{"row":121,"column":19},"action":"insert","lines":["1"]}],[{"start":{"row":121,"column":19},"end":{"row":121,"column":20},"action":"insert","lines":[" "],"id":1553},{"start":{"row":121,"column":20},"end":{"row":121,"column":21},"action":"insert","lines":["L"]},{"start":{"row":121,"column":21},"end":{"row":121,"column":22},"action":"insert","lines":["a"]},{"start":{"row":121,"column":22},"end":{"row":121,"column":23},"action":"insert","lines":["b"]},{"start":{"row":121,"column":23},"end":{"row":121,"column":24},"action":"insert","lines":["a"]},{"start":{"row":121,"column":24},"end":{"row":121,"column":25},"action":"insert","lines":["s"]}],[{"start":{"row":121,"column":24},"end":{"row":121,"column":25},"action":"remove","lines":["s"],"id":1554},{"start":{"row":121,"column":23},"end":{"row":121,"column":24},"action":"remove","lines":["a"]}],[{"start":{"row":121,"column":23},"end":{"row":121,"column":24},"action":"insert","lines":["s"],"id":1555}],[{"start":{"row":121,"column":24},"end":{"row":121,"column":25},"action":"insert","lines":[" "],"id":1556},{"start":{"row":121,"column":25},"end":{"row":121,"column":26},"action":"insert","lines":["f"]},{"start":{"row":121,"column":26},"end":{"row":121,"column":27},"action":"insert","lines":["o"]},{"start":{"row":121,"column":27},"end":{"row":121,"column":28},"action":"insert","lines":["r"]},{"start":{"row":121,"column":28},"end":{"row":121,"column":29},"action":"insert","lines":["m"]},{"start":{"row":121,"column":29},"end":{"row":121,"column":30},"action":"insert","lines":["a"]},{"start":{"row":121,"column":30},"end":{"row":121,"column":31},"action":"insert","lines":["t"]}],[{"start":{"row":122,"column":8},"end":{"row":122,"column":26},"action":"remove","lines":["print(output_text)"],"id":1557}],[{"start":{"row":125,"column":8},"end":{"row":125,"column":26},"action":"insert","lines":["print(output_text)"],"id":1558}],[{"start":{"row":54,"column":33},"end":{"row":54,"column":36},"action":"remove","lines":["512"],"id":1559},{"start":{"row":54,"column":33},"end":{"row":54,"column":34},"action":"insert","lines":["2"]},{"start":{"row":54,"column":34},"end":{"row":54,"column":35},"action":"insert","lines":["0"]},{"start":{"row":54,"column":35},"end":{"row":54,"column":36},"action":"insert","lines":["0"]}],[{"start":{"row":55,"column":33},"end":{"row":55,"column":34},"action":"remove","lines":["5"],"id":1560}],[{"start":{"row":55,"column":33},"end":{"row":55,"column":34},"action":"insert","lines":["1"],"id":1561}],[{"start":{"row":55,"column":33},"end":{"row":55,"column":34},"action":"remove","lines":["1"],"id":1562}],[{"start":{"row":55,"column":33},"end":{"row":55,"column":34},"action":"insert","lines":["2"],"id":1563}],[{"start":{"row":64,"column":64},"end":{"row":65,"column":0},"action":"insert","lines":["",""],"id":1564},{"start":{"row":65,"column":0},"end":{"row":65,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":65,"column":8},"end":{"row":65,"column":9},"action":"insert","lines":["ㅔ"],"id":1565},{"start":{"row":65,"column":9},"end":{"row":65,"column":10},"action":"insert","lines":["갸"]},{"start":{"row":65,"column":10},"end":{"row":65,"column":11},"action":"insert","lines":["ㅜ"]},{"start":{"row":65,"column":11},"end":{"row":65,"column":13},"action":"insert","lines":["ㅅ("]}],[{"start":{"row":65,"column":12},"end":{"row":65,"column":13},"action":"remove","lines":["("],"id":1566},{"start":{"row":65,"column":11},"end":{"row":65,"column":12},"action":"remove","lines":["ㅅ"]},{"start":{"row":65,"column":10},"end":{"row":65,"column":11},"action":"remove","lines":["ㅜ"]},{"start":{"row":65,"column":9},"end":{"row":65,"column":10},"action":"remove","lines":["갸"]},{"start":{"row":65,"column":8},"end":{"row":65,"column":9},"action":"remove","lines":["ㅔ"]},{"start":{"row":65,"column":4},"end":{"row":65,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":65,"column":4},"end":{"row":65,"column":8},"action":"insert","lines":["    "],"id":1567}],[{"start":{"row":65,"column":8},"end":{"row":66,"column":0},"action":"insert","lines":["",""],"id":1568},{"start":{"row":66,"column":0},"end":{"row":66,"column":8},"action":"insert","lines":["        "]},{"start":{"row":66,"column":8},"end":{"row":66,"column":9},"action":"insert","lines":["ㅔ"]},{"start":{"row":66,"column":9},"end":{"row":66,"column":10},"action":"insert","lines":["갸"]},{"start":{"row":66,"column":10},"end":{"row":66,"column":11},"action":"insert","lines":["ㅜ"]},{"start":{"row":66,"column":11},"end":{"row":66,"column":12},"action":"insert","lines":["ㅅ"]},{"start":{"row":66,"column":11},"end":{"row":66,"column":12},"action":"remove","lines":["ㅅ"]},{"start":{"row":66,"column":10},"end":{"row":66,"column":11},"action":"remove","lines":["ㅜ"]},{"start":{"row":66,"column":9},"end":{"row":66,"column":10},"action":"remove","lines":["갸"]},{"start":{"row":66,"column":8},"end":{"row":66,"column":9},"action":"remove","lines":["ㅔ"]}],[{"start":{"row":66,"column":8},"end":{"row":66,"column":9},"action":"insert","lines":["p"],"id":1569},{"start":{"row":66,"column":9},"end":{"row":66,"column":10},"action":"insert","lines":["r"]},{"start":{"row":66,"column":10},"end":{"row":66,"column":11},"action":"insert","lines":["i"]},{"start":{"row":66,"column":11},"end":{"row":66,"column":12},"action":"insert","lines":["n"]},{"start":{"row":66,"column":12},"end":{"row":66,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":66,"column":13},"end":{"row":66,"column":15},"action":"insert","lines":["()"],"id":1570}],[{"start":{"row":66,"column":14},"end":{"row":66,"column":16},"action":"insert","lines":["\"\""],"id":1571}],[{"start":{"row":66,"column":15},"end":{"row":66,"column":16},"action":"insert","lines":["m"],"id":1572},{"start":{"row":66,"column":16},"end":{"row":66,"column":17},"action":"insert","lines":["o"]},{"start":{"row":66,"column":17},"end":{"row":66,"column":18},"action":"insert","lines":["d"]},{"start":{"row":66,"column":18},"end":{"row":66,"column":19},"action":"insert","lines":["e"]},{"start":{"row":66,"column":19},"end":{"row":66,"column":20},"action":"insert","lines":["l"]}],[{"start":{"row":66,"column":19},"end":{"row":66,"column":20},"action":"remove","lines":["l"],"id":1573},{"start":{"row":66,"column":18},"end":{"row":66,"column":19},"action":"remove","lines":["e"]},{"start":{"row":66,"column":17},"end":{"row":66,"column":18},"action":"remove","lines":["d"]},{"start":{"row":66,"column":16},"end":{"row":66,"column":17},"action":"remove","lines":["o"]},{"start":{"row":66,"column":15},"end":{"row":66,"column":16},"action":"remove","lines":["m"]}],[{"start":{"row":66,"column":15},"end":{"row":66,"column":16},"action":"insert","lines":["M"],"id":1574},{"start":{"row":66,"column":16},"end":{"row":66,"column":17},"action":"insert","lines":["o"]},{"start":{"row":66,"column":17},"end":{"row":66,"column":18},"action":"insert","lines":["d"]},{"start":{"row":66,"column":18},"end":{"row":66,"column":19},"action":"insert","lines":["e"]},{"start":{"row":66,"column":19},"end":{"row":66,"column":20},"action":"insert","lines":["l"]}],[{"start":{"row":66,"column":20},"end":{"row":66,"column":21},"action":"insert","lines":[" "],"id":1575}],[{"start":{"row":66,"column":21},"end":{"row":66,"column":22},"action":"insert","lines":["o"],"id":1576},{"start":{"row":66,"column":22},"end":{"row":66,"column":23},"action":"insert","lines":["u"]},{"start":{"row":66,"column":23},"end":{"row":66,"column":24},"action":"insert","lines":["t"]}],[{"start":{"row":66,"column":23},"end":{"row":66,"column":24},"action":"remove","lines":["t"],"id":1577},{"start":{"row":66,"column":22},"end":{"row":66,"column":23},"action":"remove","lines":["u"]},{"start":{"row":66,"column":21},"end":{"row":66,"column":22},"action":"remove","lines":["o"]},{"start":{"row":66,"column":20},"end":{"row":66,"column":21},"action":"remove","lines":[" "]}],[{"start":{"row":66,"column":20},"end":{"row":66,"column":21},"action":"insert","lines":[" "],"id":1578},{"start":{"row":66,"column":21},"end":{"row":66,"column":22},"action":"insert","lines":["O"]},{"start":{"row":66,"column":22},"end":{"row":66,"column":23},"action":"insert","lines":["u"]},{"start":{"row":66,"column":23},"end":{"row":66,"column":24},"action":"insert","lines":["t"]}],[{"start":{"row":66,"column":23},"end":{"row":66,"column":24},"action":"remove","lines":["t"],"id":1579},{"start":{"row":66,"column":22},"end":{"row":66,"column":23},"action":"remove","lines":["u"]},{"start":{"row":66,"column":21},"end":{"row":66,"column":22},"action":"remove","lines":["O"]}],[{"start":{"row":66,"column":21},"end":{"row":66,"column":22},"action":"insert","lines":["f"],"id":1580},{"start":{"row":66,"column":22},"end":{"row":66,"column":23},"action":"insert","lines":["o"]},{"start":{"row":66,"column":23},"end":{"row":66,"column":24},"action":"insert","lines":["r"]},{"start":{"row":66,"column":24},"end":{"row":66,"column":25},"action":"insert","lines":["m"]},{"start":{"row":66,"column":25},"end":{"row":66,"column":26},"action":"insert","lines":["a"]},{"start":{"row":66,"column":26},"end":{"row":66,"column":27},"action":"insert","lines":["t"]},{"start":{"row":66,"column":27},"end":{"row":66,"column":28},"action":"insert","lines":[":"]}],[{"start":{"row":66,"column":28},"end":{"row":66,"column":29},"action":"insert","lines":[" "],"id":1581},{"start":{"row":66,"column":29},"end":{"row":66,"column":30},"action":"insert","lines":["{"]},{"start":{"row":66,"column":30},"end":{"row":66,"column":31},"action":"insert","lines":["}"]}],[{"start":{"row":66,"column":32},"end":{"row":66,"column":33},"action":"insert","lines":[" "],"id":1582},{"start":{"row":66,"column":33},"end":{"row":66,"column":34},"action":"insert","lines":["."]},{"start":{"row":66,"column":34},"end":{"row":66,"column":35},"action":"insert","lines":["f"]},{"start":{"row":66,"column":35},"end":{"row":66,"column":36},"action":"insert","lines":["o"]},{"start":{"row":66,"column":36},"end":{"row":66,"column":37},"action":"insert","lines":["r"]},{"start":{"row":66,"column":37},"end":{"row":66,"column":38},"action":"insert","lines":["m"]},{"start":{"row":66,"column":38},"end":{"row":66,"column":39},"action":"insert","lines":["a"]}],[{"start":{"row":66,"column":34},"end":{"row":66,"column":39},"action":"remove","lines":["forma"],"id":1583},{"start":{"row":66,"column":34},"end":{"row":66,"column":42},"action":"insert","lines":["format()"]}],[{"start":{"row":66,"column":41},"end":{"row":66,"column":42},"action":"insert","lines":["m"],"id":1584},{"start":{"row":66,"column":42},"end":{"row":66,"column":43},"action":"insert","lines":["o"]},{"start":{"row":66,"column":43},"end":{"row":66,"column":44},"action":"insert","lines":["d"]},{"start":{"row":66,"column":44},"end":{"row":66,"column":45},"action":"insert","lines":["e"]},{"start":{"row":66,"column":45},"end":{"row":66,"column":46},"action":"insert","lines":["l"]}],[{"start":{"row":66,"column":41},"end":{"row":66,"column":46},"action":"remove","lines":["model"],"id":1585},{"start":{"row":66,"column":41},"end":{"row":66,"column":55},"action":"insert","lines":["model_response"]}],[{"start":{"row":54,"column":33},"end":{"row":54,"column":36},"action":"remove","lines":["200"],"id":1586},{"start":{"row":54,"column":33},"end":{"row":54,"column":34},"action":"insert","lines":["1"]},{"start":{"row":54,"column":34},"end":{"row":54,"column":35},"action":"insert","lines":["0"]}],[{"start":{"row":54,"column":34},"end":{"row":54,"column":35},"action":"remove","lines":["0"],"id":1587},{"start":{"row":54,"column":33},"end":{"row":54,"column":34},"action":"remove","lines":["1"]}],[{"start":{"row":54,"column":33},"end":{"row":54,"column":34},"action":"insert","lines":["3"],"id":1588},{"start":{"row":54,"column":34},"end":{"row":54,"column":35},"action":"insert","lines":["0"]}],[{"start":{"row":30,"column":0},"end":{"row":34,"column":49},"action":"remove","lines":["    \"Llama\": \"meta.llama3-8b-instruct-v1:0\",","    \"AI21 Lab\": \"ai21.j2-mid-v1\",","    \"Amazon Titan\": \"amazon.titan-text-premier-v1:0\",","    \"Amazon Titan Embedding\": \"amazon.titan-embed-text-v2:0\",","    \"Mistral\": \"mistral.mistral-large-2402-v1:0\","],"id":1589},{"start":{"row":29,"column":56},"end":{"row":30,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":29,"column":56},"end":{"row":30,"column":0},"action":"insert","lines":["",""],"id":1590},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"remove","lines":["    "],"id":1591}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":56},"action":"insert","lines":["    \"Claude\": \"anthropic.claude-3-sonnet-20240229-v1:0\","],"id":1592}],[{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"insert","lines":["_"],"id":1593},{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":["w"]},{"start":{"row":30,"column":13},"end":{"row":30,"column":14},"action":"insert","lines":["i"]},{"start":{"row":30,"column":14},"end":{"row":30,"column":15},"action":"insert","lines":["t"]},{"start":{"row":30,"column":15},"end":{"row":30,"column":16},"action":"insert","lines":["h"]}],[{"start":{"row":30,"column":16},"end":{"row":30,"column":17},"action":"insert","lines":["_"],"id":1594}],[{"start":{"row":30,"column":17},"end":{"row":30,"column":18},"action":"insert","lines":["k"],"id":1595},{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"insert","lines":["n"]},{"start":{"row":30,"column":19},"end":{"row":30,"column":20},"action":"insert","lines":["o"]},{"start":{"row":30,"column":20},"end":{"row":30,"column":21},"action":"insert","lines":["w"]},{"start":{"row":30,"column":21},"end":{"row":30,"column":22},"action":"insert","lines":["k"]},{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"insert","lines":["e"]},{"start":{"row":30,"column":23},"end":{"row":30,"column":24},"action":"insert","lines":["d"]}],[{"start":{"row":30,"column":24},"end":{"row":30,"column":25},"action":"insert","lines":["="],"id":1596},{"start":{"row":30,"column":25},"end":{"row":30,"column":26},"action":"insert","lines":["="]}],[{"start":{"row":30,"column":25},"end":{"row":30,"column":26},"action":"remove","lines":["="],"id":1597},{"start":{"row":30,"column":24},"end":{"row":30,"column":25},"action":"remove","lines":["="]},{"start":{"row":30,"column":23},"end":{"row":30,"column":24},"action":"remove","lines":["d"]},{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"remove","lines":["e"]},{"start":{"row":30,"column":21},"end":{"row":30,"column":22},"action":"remove","lines":["k"]}],[{"start":{"row":30,"column":21},"end":{"row":30,"column":22},"action":"insert","lines":["l"],"id":1598},{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"insert","lines":["e"]},{"start":{"row":30,"column":23},"end":{"row":30,"column":24},"action":"insert","lines":["d"]},{"start":{"row":30,"column":24},"end":{"row":30,"column":25},"action":"insert","lines":["g"]},{"start":{"row":30,"column":25},"end":{"row":30,"column":26},"action":"insert","lines":["e"]},{"start":{"row":30,"column":26},"end":{"row":30,"column":27},"action":"insert","lines":["b"]},{"start":{"row":30,"column":27},"end":{"row":30,"column":28},"action":"insert","lines":["a"]}],[{"start":{"row":30,"column":28},"end":{"row":30,"column":29},"action":"insert","lines":["s"],"id":1599},{"start":{"row":30,"column":29},"end":{"row":30,"column":30},"action":"insert","lines":["e"]},{"start":{"row":30,"column":30},"end":{"row":30,"column":31},"action":"insert","lines":["d"]}],[{"start":{"row":30,"column":34},"end":{"row":30,"column":35},"action":"insert","lines":[","],"id":1600}],[{"start":{"row":30,"column":34},"end":{"row":30,"column":36},"action":"insert","lines":["\"\""],"id":1601}],[{"start":{"row":30,"column":35},"end":{"row":30,"column":45},"action":"insert","lines":["WID0XRPRUS"],"id":1602}],[{"start":{"row":30,"column":34},"end":{"row":30,"column":35},"action":"insert","lines":["["],"id":1603}],[{"start":{"row":30,"column":89},"end":{"row":30,"column":90},"action":"insert","lines":["]"],"id":1604}],[{"start":{"row":102,"column":8},"end":{"row":103,"column":0},"action":"insert","lines":["",""],"id":1605},{"start":{"row":103,"column":0},"end":{"row":103,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":103,"column":4},"end":{"row":103,"column":8},"action":"remove","lines":["    "],"id":1606}],[{"start":{"row":103,"column":0},"end":{"row":103,"column":4},"action":"remove","lines":["    "],"id":1607}],[{"start":{"row":103,"column":0},"end":{"row":124,"column":57},"action":"insert","lines":["    elif 'anthropic' in modelId:","        ","        ","        print(\"claude selected\")","        body = json.dumps(","            {","                \"anthropic_version\": \"bedrock-2023-05-31\",","                \"max_tokens\": 1000,","                \"messages\": [","                    {","                        \"role\": \"user\",","                        \"content\": [{\"type\": \"text\", \"text\": prompt_data}],","                    }","                ],","            }","        )","        response = bedrock_runtime.invoke_model(","            modelId=modelId,","            body=body,","        )","        response_body = json.loads(response.get(\"body\").read())","        output_text = response_body[\"content\"][0][\"text\"]"],"id":1608}],[{"start":{"row":103,"column":10},"end":{"row":103,"column":19},"action":"remove","lines":["anthropic"],"id":1609},{"start":{"row":103,"column":10},"end":{"row":103,"column":20},"action":"insert","lines":["WID0XRPRUS"]}],[{"start":{"row":101,"column":57},"end":{"row":102,"column":0},"action":"insert","lines":["",""],"id":1610},{"start":{"row":102,"column":0},"end":{"row":102,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":1611},{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]},{"start":{"row":9,"column":0},"end":{"row":9,"column":1},"action":"insert","lines":["#"]},{"start":{"row":9,"column":1},"end":{"row":9,"column":2},"action":"insert","lines":["e"]},{"start":{"row":9,"column":2},"end":{"row":9,"column":3},"action":"insert","lines":["n"]},{"start":{"row":9,"column":3},"end":{"row":9,"column":4},"action":"insert","lines":["d"]},{"start":{"row":9,"column":4},"end":{"row":9,"column":5},"action":"insert","lines":["p"]},{"start":{"row":9,"column":5},"end":{"row":9,"column":6},"action":"insert","lines":["o"]}],[{"start":{"row":9,"column":6},"end":{"row":9,"column":7},"action":"insert","lines":["i"],"id":1612},{"start":{"row":9,"column":7},"end":{"row":9,"column":8},"action":"insert","lines":["n"]},{"start":{"row":9,"column":8},"end":{"row":9,"column":9},"action":"insert","lines":["t"]}],[{"start":{"row":9,"column":9},"end":{"row":9,"column":10},"action":"insert","lines":[" "],"id":1613},{"start":{"row":9,"column":10},"end":{"row":9,"column":11},"action":"insert","lines":["L"]},{"start":{"row":9,"column":11},"end":{"row":9,"column":12},"action":"insert","lines":["A"]},{"start":{"row":9,"column":12},"end":{"row":9,"column":13},"action":"insert","lines":["M"]},{"start":{"row":9,"column":13},"end":{"row":9,"column":14},"action":"insert","lines":["B"]},{"start":{"row":9,"column":14},"end":{"row":9,"column":15},"action":"insert","lines":["A"]}],[{"start":{"row":9,"column":15},"end":{"row":9,"column":16},"action":"insert","lines":[" "],"id":1614},{"start":{"row":9,"column":16},"end":{"row":9,"column":17},"action":"insert","lines":["U"]},{"start":{"row":9,"column":17},"end":{"row":9,"column":18},"action":"insert","lines":["R"]},{"start":{"row":9,"column":18},"end":{"row":9,"column":19},"action":"insert","lines":["L"]}],[{"start":{"row":9,"column":19},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":1615}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"insert","lines":["#"],"id":1616}],[{"start":{"row":10,"column":1},"end":{"row":10,"column":77},"action":"insert","lines":[" https://uwrzso3d5noyl64fa42mxo5fny0erwoq.lambda-url.ap-northeast-2.on.aws/ "],"id":1617}],[{"start":{"row":33,"column":36},"end":{"row":33,"column":46},"action":"remove","lines":["WID0XRPRUS"],"id":1618},{"start":{"row":33,"column":36},"end":{"row":33,"column":46},"action":"insert","lines":["MK8YAP5J5O"]}],[{"start":{"row":107,"column":10},"end":{"row":107,"column":20},"action":"remove","lines":["WID0XRPRUS"],"id":1619},{"start":{"row":107,"column":10},"end":{"row":107,"column":20},"action":"insert","lines":["MK8YAP5J5O"]}],[{"start":{"row":110,"column":22},"end":{"row":110,"column":23},"action":"insert","lines":["w"],"id":1620},{"start":{"row":110,"column":23},"end":{"row":110,"column":24},"action":"insert","lines":["i"]},{"start":{"row":110,"column":24},"end":{"row":110,"column":25},"action":"insert","lines":["t"]},{"start":{"row":110,"column":25},"end":{"row":110,"column":26},"action":"insert","lines":["h"]}],[{"start":{"row":110,"column":26},"end":{"row":110,"column":27},"action":"insert","lines":[" "],"id":1621},{"start":{"row":110,"column":27},"end":{"row":110,"column":28},"action":"insert","lines":["k"]},{"start":{"row":110,"column":28},"end":{"row":110,"column":29},"action":"insert","lines":["b"]}],[{"start":{"row":110,"column":29},"end":{"row":110,"column":30},"action":"insert","lines":[" "],"id":1622}],[{"start":{"row":0,"column":0},"end":{"row":219,"column":0},"action":"remove","lines":["import streamlit as st","import json","import boto3","import logging","","# Configure logging","#logging.basicConfig(level=logging.DEBUG, format='%(asctime)s %(levelname)s %(message)s')","","","#endpoint LAMBA URL","# https://uwrzso3d5noyl64fa42mxo5fny0erwoq.lambda-url.ap-northeast-2.on.aws/ ","# Bedrock runtime","bedrock_runtime = boto3.client(service_name=\"bedrock-runtime\", region_name=\"us-east-1\")","","st.title(\"Chatbot powered by Bedrock with multi-choice model\")","","# Initialize session state if there are no messages","if \"messages\" not in st.session_state:","    st.session_state.messages = []","    st.session_state.token_count = 0","","# Display chat messages","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","def clear_screen():","    st.session_state.messages = [{\"role\": \"assistant\", \"content\": \"How may I assist you today?\"}]","    st.session_state.token_count = 0","","# Define model options","MODEL_OPTIONS = {","    \"Claude\": \"anthropic.claude-3-sonnet-20240229-v1:0\",","    \"Claude_with_knowledgebased\": [\"MK8YAP5J5O\",\"anthropic.claude-3-sonnet-20240229-v1:0\"],","}","","def get_response(modelId, prompt_data):","    ","    print(\"Model {} \".format(modelId))","    print(\"Message {} \".format(prompt_data))","    # max_tokens = 4096","    # temperature = 0","    # top_p = 0.9","    output_text = \"model not working lol\"","","    if 'amazon' in modelId:","        ","        ","        print(\"amazon selected\")","        ","        request = json.dumps({","            \"inputText\": prompt_data,","            \"textGenerationConfig\": {","                \"maxTokenCount\": 30,","                \"temperature\": 0.2,","            },","        })","        ","        # Invoke the model with the request.","        response = bedrock_runtime.invoke_model(modelId=modelId, body=request)","        ","        # Decode the response body.","        model_response = json.loads(response[\"body\"].read())","        output_text = model_response[\"results\"][0][\"outputText\"]","        ","        print(\"Model format: {}\" .format(model_response))","        ","    elif 'embed' in modelId:","        ","        ","        print(\"amazon embedding selected\")","        ","        request = json.dumps(","            {\"inputText\" : prompt_data}","        )","        response = bedrock_runtime.invoke_model(modelId=modelId, body=request)","        ","        model_response = json.loads(response[\"body\"].read())","        ","        output_text = model_response[\"embedding\"]","","","        ","    elif 'anthropic' in modelId:","        ","        ","        print(\"claude selected\")","        body = json.dumps(","            {","                \"anthropic_version\": \"bedrock-2023-05-31\",","                \"max_tokens\": 1000,","                \"messages\": [","                    {","                        \"role\": \"user\",","                        \"content\": [{\"type\": \"text\", \"text\": prompt_data}],","                    }","                ],","            }","        )","        response = bedrock_runtime.invoke_model(","            modelId=modelId,","            body=body,","        )","        response_body = json.loads(response.get(\"body\").read())","        output_text = response_body[\"content\"][0][\"text\"]","        ","        ","    elif 'MK8YAP5J5O' in modelId:","        ","        ","        print(\"claude with kb selected\")","        body = json.dumps(","            {","                \"anthropic_version\": \"bedrock-2023-05-31\",","                \"max_tokens\": 1000,","                \"messages\": [","                    {","                        \"role\": \"user\",","                        \"content\": [{\"type\": \"text\", \"text\": prompt_data}],","                    }","                ],","            }","        )","        response = bedrock_runtime.invoke_model(","            modelId=modelId,","            body=body,","        )","        response_body = json.loads(response.get(\"body\").read())","        output_text = response_body[\"content\"][0][\"text\"]","        ","        ","    elif 'ai21' in modelId:","        ","        print(\"ai21 selected\")","        request = json.dumps(","            {","                \"prompt\": prompt_data,","                \"maxTokens\": 200,","                \"temperature\": 0.2,","            }","        )","        ","        response = bedrock_runtime.invoke_model(modelId=modelId, body=request)","        model_response = json.loads(response[\"body\"].read())   ","        ","        print(\"AI21 Labs format\")","        ","        ","        output_text = model_response[\"completions\"][0][\"data\"][\"text\"]","        print(output_text)","        ","    elif 'mistral' in modelId:","        prompt = f\"<s>[INST] {prompt_data} [/INST]\"","        request = json.dumps(","            {","                \"prompt\": prompt,","                \"max_tokens\": 512,","                \"temperature\": 0.5,","            }","        )","        response = bedrock_runtime.invoke_model(modelId=modelId, body=request)","        ","        model_response = json.loads(response[\"body\"].read())","        output_text = model_response[\"outputs\"][0][\"text\"]","        ","","    elif 'meta' in modelId:","        prompt = f\"\"\"","        <|begin_of_text|>","        <|start_header_id|>user<|end_header_id|>","        {prompt_data}","        <|eot_id|>","        <|start_header_id|>assistant<|end_header_id|>","        \"\"\"","        ","        request = json.dumps(","            {","            \"prompt\": prompt,","            \"max_gen_len\": 512,","            \"temperature\": 0.5,","            })","        ","        response = bedrock_runtime.invoke_model(modelId=modelId, body=request)","        model_response = json.loads(response[\"body\"].read())","        output_text = model_response[\"generation\"]","        ","    else:","        print('Parameter model must be one of titan, claude, j2, or sd')","        return","","","    return output_text","","# Sidebar","with st.sidebar:","    st.title('Streamlit Chat')","    st.subheader('With DynamoDB Memory :brain:')","    st.button('Clear Screen', on_click=clear_screen)","    ","    option = st.selectbox(","        \"What model would you like to use?\",","        options=list(MODEL_OPTIONS.keys()))","    st.write(\"You selected:\", option)","","if user_prompt := st.chat_input(\"What's Up?\"):","    st.session_state.messages.append({\"role\": \"user\", \"content\": user_prompt})","","    with st.chat_message(\"user\"):","        st.markdown(user_prompt)","    ","    # Prepare the conversation history for the model","    conversation_history = \"\\n\".join(","        f'{msg[\"role\"]}: {msg[\"content\"]}' for msg in st.session_state.messages","    )","    full_response = get_response(MODEL_OPTIONS[option], conversation_history)","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": full_response})","","    with st.chat_message(\"assistant\"):","        st.markdown(full_response)",""],"id":1623},{"start":{"row":0,"column":0},"end":{"row":122,"column":34},"action":"insert","lines":["import streamlit as st","import json","import boto3","import logging","","# Configure logging","#logging.basicConfig(level=logging.DEBUG, format='%(asctime)s %(levelname)s %(message)s')","","#endpoint LAMBA URL","# https://uwrzso3d5noyl64fa42mxo5fny0erwoq.lambda-url.ap-northeast-2.on.aws/ ","# Bedrock runtime","bedrock_runtime = boto3.client(service_name=\"bedrock-runtime\", region_name=\"us-east-1\")","","st.title(\"Chatbot powered by Bedrock with multi-choice model\")","","# Initialize session state if there are no messages","if \"messages\" not in st.session_state:","    st.session_state.messages = []","    st.session_state.token_count = 0","","# Display chat messages","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","def clear_screen():","    st.session_state.messages = [{\"role\": \"assistant\", \"content\": \"How may I assist you today?\"}]","    st.session_state.token_count = 0","","# Define model options","MODEL_OPTIONS = {","    \"Claude\": \"anthropic.claude-3-sonnet-20240229-v1:0\",","    \"Claude_with_knowledgebased\": \"MK8YAP5J5O,anthropic.claude-3-sonnet-20240229-v1:0\",","}","","def get_response(model_option, prompt_data):","    output_text = \"\"","    model_ids = model_option.split(\",\")","    ","    for model_id in model_ids:","        model_id = model_id.strip()","        print(f\"Model {model_id}\")","        print(f\"Message {prompt_data}\")","","        if 'amazon' in model_id:","            # Amazon model code","            pass","        elif 'embed' in model_id:","            # Amazon embedding code","            pass","        elif 'anthropic' in model_id:","            # Claude without KB","            body = json.dumps(","                {","                    \"anthropic_version\": \"bedrock-2023-05-31\",","                    \"max_tokens\": 1000,","                    \"messages\": [","                        {","                            \"role\": \"user\",","                            \"content\": [{\"type\": \"text\", \"text\": prompt_data}],","                        }","                    ],","                }","            )","            response = bedrock_runtime.invoke_model(","                modelId=model_id,","                body=body,","            )","            response_body = json.loads(response.get(\"body\").read())","            model_output = response_body[\"content\"][0][\"text\"]","            output_text += f\"Claude (without KB): {model_output}\\n\"","        elif model_id == 'MK8YAP5J5O':","            # Claude with KB","            body = json.dumps(","                {","                    \"anthropic_version\": \"bedrock-2023-05-31\",","                    \"max_tokens\": 1000,","                    \"messages\": [","                        {","                            \"role\": \"user\",","                            \"content\": [{\"type\": \"text\", \"text\": prompt_data}],","                        }","                    ],","                }","            )","            response = bedrock_runtime.invoke_model(","                modelId=model_id,","                body=body,","            )","            response_body = json.loads(response.get(\"body\").read())","            model_output = response_body[\"content\"][0][\"text\"]","            output_text += f\"Claude (with KB): {model_output}\\n\"","        # Add other model cases here","","    return output_text","","# Sidebar","with st.sidebar:","    st.title('Streamlit Chat')","    st.subheader('With DynamoDB Memory :brain:')","    st.button('Clear Screen', on_click=clear_screen)","    ","    option = st.selectbox(","        \"What model would you like to use?\",","        options=list(MODEL_OPTIONS.keys()))","    st.write(\"You selected:\", option)","","if user_prompt := st.chat_input(\"What's Up?\"):","    st.session_state.messages.append({\"role\": \"user\", \"content\": user_prompt})","","    with st.chat_message(\"user\"):","        st.markdown(user_prompt)","    ","    # Prepare the conversation history for the model","    conversation_history = \"\\n\".join(","        f'{msg[\"role\"]}: {msg[\"content\"]}' for msg in st.session_state.messages","    )","    model_option = MODEL_OPTIONS[option]","    full_response = get_response(model_option, conversation_history)","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": full_response})","","    with st.chat_message(\"assistant\"):","        st.markdown(full_response)"]}],[{"start":{"row":0,"column":0},"end":{"row":122,"column":34},"action":"remove","lines":["import streamlit as st","import json","import boto3","import logging","","# Configure logging","#logging.basicConfig(level=logging.DEBUG, format='%(asctime)s %(levelname)s %(message)s')","","#endpoint LAMBA URL","# https://uwrzso3d5noyl64fa42mxo5fny0erwoq.lambda-url.ap-northeast-2.on.aws/ ","# Bedrock runtime","bedrock_runtime = boto3.client(service_name=\"bedrock-runtime\", region_name=\"us-east-1\")","","st.title(\"Chatbot powered by Bedrock with multi-choice model\")","","# Initialize session state if there are no messages","if \"messages\" not in st.session_state:","    st.session_state.messages = []","    st.session_state.token_count = 0","","# Display chat messages","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","","def clear_screen():","    st.session_state.messages = [{\"role\": \"assistant\", \"content\": \"How may I assist you today?\"}]","    st.session_state.token_count = 0","","# Define model options","MODEL_OPTIONS = {","    \"Claude\": \"anthropic.claude-3-sonnet-20240229-v1:0\",","    \"Claude_with_knowledgebased\": \"MK8YAP5J5O,anthropic.claude-3-sonnet-20240229-v1:0\",","}","","def get_response(model_option, prompt_data):","    output_text = \"\"","    model_ids = model_option.split(\",\")","    ","    for model_id in model_ids:","        model_id = model_id.strip()","        print(f\"Model {model_id}\")","        print(f\"Message {prompt_data}\")","","        if 'amazon' in model_id:","            # Amazon model code","            pass","        elif 'embed' in model_id:","            # Amazon embedding code","            pass","        elif 'anthropic' in model_id:","            # Claude without KB","            body = json.dumps(","                {","                    \"anthropic_version\": \"bedrock-2023-05-31\",","                    \"max_tokens\": 1000,","                    \"messages\": [","                        {","                            \"role\": \"user\",","                            \"content\": [{\"type\": \"text\", \"text\": prompt_data}],","                        }","                    ],","                }","            )","            response = bedrock_runtime.invoke_model(","                modelId=model_id,","                body=body,","            )","            response_body = json.loads(response.get(\"body\").read())","            model_output = response_body[\"content\"][0][\"text\"]","            output_text += f\"Claude (without KB): {model_output}\\n\"","        elif model_id == 'MK8YAP5J5O':","            # Claude with KB","            body = json.dumps(","                {","                    \"anthropic_version\": \"bedrock-2023-05-31\",","                    \"max_tokens\": 1000,","                    \"messages\": [","                        {","                            \"role\": \"user\",","                            \"content\": [{\"type\": \"text\", \"text\": prompt_data}],","                        }","                    ],","                }","            )","            response = bedrock_runtime.invoke_model(","                modelId=model_id,","                body=body,","            )","            response_body = json.loads(response.get(\"body\").read())","            model_output = response_body[\"content\"][0][\"text\"]","            output_text += f\"Claude (with KB): {model_output}\\n\"","        # Add other model cases here","","    return output_text","","# Sidebar","with st.sidebar:","    st.title('Streamlit Chat')","    st.subheader('With DynamoDB Memory :brain:')","    st.button('Clear Screen', on_click=clear_screen)","    ","    option = st.selectbox(","        \"What model would you like to use?\",","        options=list(MODEL_OPTIONS.keys()))","    st.write(\"You selected:\", option)","","if user_prompt := st.chat_input(\"What's Up?\"):","    st.session_state.messages.append({\"role\": \"user\", \"content\": user_prompt})","","    with st.chat_message(\"user\"):","        st.markdown(user_prompt)","    ","    # Prepare the conversation history for the model","    conversation_history = \"\\n\".join(","        f'{msg[\"role\"]}: {msg[\"content\"]}' for msg in st.session_state.messages","    )","    model_option = MODEL_OPTIONS[option]","    full_response = get_response(model_option, conversation_history)","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": full_response})","","    with st.chat_message(\"assistant\"):","        st.markdown(full_response)"],"id":1632},{"start":{"row":0,"column":0},"end":{"row":49,"column":34},"action":"insert","lines":["import streamlit as st","import json","import boto3","# Bedrock runtime","bedrock_runtime = boto3.client('bedrock-agent-runtime', region_name='us-east-1')","st.title(\"Chatbot powered by Bedrock with multi-choice model\")","# Initialize session state if there are no messages","if \"messages\" not in st.session_state:","    st.session_state.messages = []","    st.session_state.token_count = 0","# Display chat messages","for message in st.session_state.messages:","    with st.chat_message(message[\"role\"]):","        st.markdown(message[\"content\"])","def clear_screen():","    st.session_state.messages = [{\"role\": \"assistant\", \"content\": \"How may I assist you today?\"}]","    st.session_state.token_count = 0","def get_response(prompt_data):","    input_data = {","        'input': {","            'text': prompt_data","        },","        'retrieveAndGenerateConfiguration': {","            'knowledgeBaseConfiguration': {","                'knowledgeBaseId': 'MK8YAP5J5O',","                'modelArn': 'arn:aws:bedrock:us-east-1::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0'","            },","            'type': 'KNOWLEDGE_BASE'","        }","    }","    response = bedrock_runtime.retrieve_and_generate(**input_data)","    output_text = response['output']['text']","    return output_text","# Sidebar","with st.sidebar:","    st.title('Streamlit Chat')","    st.subheader('With DynamoDB Memory :brain:')","    st.button('Clear Screen', on_click=clear_screen)","if user_prompt := st.chat_input(\"What's Up?\"):","    st.session_state.messages.append({\"role\": \"user\", \"content\": user_prompt})","    with st.chat_message(\"user\"):","        st.markdown(user_prompt)","    # Prepare the conversation history for the model","    conversation_history = \"\\n\".join(","        f'{msg[\"role\"]}: {msg[\"content\"]}' for msg in st.session_state.messages","    )","    full_response = get_response(conversation_history)","    st.session_state.messages.append({\"role\": \"assistant\", \"content\": full_response})","    with st.chat_message(\"assistant\"):","        st.markdown(full_response)"]}],[{"start":{"row":9,"column":36},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":1634},{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":14,"column":39},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":1635},{"start":{"row":15,"column":0},"end":{"row":15,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":18,"column":36},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":1636},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":52,"column":34},"end":{"row":52,"column":35},"action":"insert","lines":["ㅊ"],"id":1637}]]},"ace":{"folds":[],"scrolltop":222.20000000000022,"scrollleft":0,"selection":{"start":{"row":23,"column":31},"end":{"row":23,"column":31},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":13,"state":"start","mode":"ace/mode/python"}},"timestamp":1717922639894,"hash":"720ae2ec5dc6cb00f05a68369a368540d3d9cc72"}